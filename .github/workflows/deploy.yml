name: Deploy to VPS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-backend:
    name: Deploy Backend to VPS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build backend
        run: pnpm --filter chefly-backend build

      - name: Create deployment package
        run: |
          cd backend
          tar -czf ../backend-deploy.tar.gz \
            --exclude='node_modules' \
            --exclude='.cache' \
            --exclude='.tmp' \
            --exclude='*.log' \
            .

      - name: Copy files to VPS via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: 'backend-deploy.tar.gz'
          target: '/tmp/'

      - name: Deploy on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            # Define deployment directory
            DEPLOY_DIR="/var/www/chefly-backend"
            
            # Create directory if it doesn't exist
            mkdir -p $DEPLOY_DIR
            
            # Extract new files
            cd $DEPLOY_DIR
            tar -xzf /tmp/backend-deploy.tar.gz
            rm /tmp/backend-deploy.tar.gz
            
            # Install pnpm if not installed
            if ! command -v pnpm &> /dev/null; then
              npm install -g pnpm
            fi
            
            # Install dependencies
            pnpm install --prod --frozen-lockfile
            
            # Restart the application (using PM2)
            if command -v pm2 &> /dev/null; then
              pm2 restart chefly-backend || pm2 start npm --name "chefly-backend" -- start
            else
              echo "PM2 not installed. Please install PM2 for process management."
            fi
            
            echo "Backend deployment completed successfully!"

  deploy-mobile-web:
    name: Deploy Mobile Web Version
    runs-on: ubuntu-latest
    needs: deploy-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build web version
        run: |
          cd mobile
          npx expo export --platform web

      - name: Create web deployment package
        run: |
          cd mobile
          tar -czf ../mobile-web-deploy.tar.gz dist/

      - name: Copy web files to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: 'mobile-web-deploy.tar.gz'
          target: '/tmp/'

      - name: Deploy web version on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            # Define deployment directory
            WEB_DIR="/var/www/chefly-web"
            
            # Create directory if it doesn't exist
            mkdir -p $WEB_DIR
            
            # Backup existing deployment
            if [ -d "$WEB_DIR/dist" ]; then
              mv $WEB_DIR/dist $WEB_DIR/dist.backup.$(date +%Y%m%d%H%M%S)
            fi
            
            # Extract new files
            cd $WEB_DIR
            tar -xzf /tmp/mobile-web-deploy.tar.gz
            rm /tmp/mobile-web-deploy.tar.gz
            
            # Set proper permissions
            chown -R www-data:www-data $WEB_DIR
            
            # Reload nginx if available
            if command -v nginx &> /dev/null; then
              nginx -t && nginx -s reload
            fi
            
            echo "Web deployment completed successfully!"

  build-mobile-apps:
    name: Build Mobile Apps (iOS & Android)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Setup EAS
        run: npm install -g eas-cli

      - name: Build iOS app
        run: |
          cd mobile
          eas build --platform ios --non-interactive --no-wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build Android app
        run: |
          cd mobile
          eas build --platform android --non-interactive --no-wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

